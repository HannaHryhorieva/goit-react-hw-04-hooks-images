{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","App.js","apiServiсe/apiService.js","reportWebVitals.js","index.js"],"names":["ImageGalleryItem","id","urlImage","tagImage","onClick","className","src","alt","ImageGallery","images","map","image","webformatURL","tags","Button","type","Searchbar","onSubmit","useState","searchValue","setSearchValue","e","preventDefault","trim","toast","error","toLowerCase","value","onChange","target","autoComplete","autoFocus","placeholder","modalRoot","document","querySelector","Modal","imageUrl","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","event","currentTarget","width","height","App","page","setPage","setImages","loading","setLoading","showModal","setShowModal","largeImageURL","setLargeImageURL","setTags","setTimeout","fetch","then","response","ok","json","Promise","reject","Error","apiService","respons","hits","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","visible","color","idImage","Number","find","length","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.180560cc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nexport default function ImageGalleryItem({ id, urlImage, tagImage, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\n      <img\n        id={id}\n        src={urlImage}\n        alt={tagImage}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  urlImage: PropTypes.string,\n  tagImage: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ images, onClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          id={image.id}\n          urlImage={image.webformatURL}\n          tagImage={image.tags}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n}\nImageGallery.propTypes = {\n  images: PropTypes.array,\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className=\"Button\">\n      Load more\n    </button>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchValue, setSearchValue] = useState('');\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchValue.trim() === '') {\n      return toast.error('Введите поисковый запрос!');\n    }\n    onSubmit(searchValue.toLowerCase());\n    setSearchValue('');\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          value={searchValue}\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ imageUrl, tags, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={imageUrl} alt={tags} width=\"1280\" height=\"auto\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  imageUrl: PropTypes.string,\n  tags: PropTypes.string,\n  onClose: PropTypes.func,\n};\n","// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal/Modal';\nimport apiService from './apiServiсe/apiService';\n\nexport default function App() {\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('');\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [tags, setTags] = useState('false');\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n    setLoading(true);\n    setTimeout(() => {\n      apiService(searchValue, page)\n        .then(respons => setImages(images => [...images, ...respons.hits]))\n        .catch(error => toast.error(`${error}`))\n        .finally(setLoading(false));\n    }, 1000);\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [page, searchValue]);\n\n  const onHandleSearch = searchValue => {\n    setImages([]);\n    setPage(1);\n    setSearchValue(searchValue);\n  };\n\n  const onLoadMore = () => {\n    setPage(page => page + 1);\n  };\n  const toggleModal = () => {\n    setShowModal(showModal => !showModal);\n  };\n  const openModal = e => {\n    toggleModal();\n    const idImage = Number(e.target.id);\n    const image = images.find(image => image.id === idImage);\n\n    setLargeImageURL(image.largeImageURL);\n    setTags(image.tags);\n  };\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onHandleSearch} />\n      <Loader\n        className=\"Loader\"\n        visible={loading}\n        type=\"Grid\"\n        color=\"#3f51b5\"\n        height={200}\n        width={200}\n      />\n\n      <ImageGallery images={images} onClick={openModal} />\n\n      {images.length > 0 && (\n        <div>\n          <Button onClick={onLoadMore} />\n        </div>\n      )}\n      {showModal && (\n        <Modal imageUrl={largeImageURL} tags={tags} onClose={toggleModal} />\n      )}\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n","export default function apiService(searchValue, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${searchValue}&page=${page}&key=22463604-709d4d80ecefd06266ae1aa7f&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Image not found'));\n  });\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n// window.scrollTo({\n//   top: document.documentElement.scrollHeight,\n//   behavior: 'smooth',\n// });\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}